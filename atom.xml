<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrSummerの小窝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wjsummer.top/"/>
  <updated>2019-04-04T09:36:53.000Z</updated>
  <id>https://wjsummer.top/</id>
  
  <author>
    <name>Jian Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>34</title>
    <link href="https://wjsummer.top/category/34/"/>
    <id>https://wjsummer.top/category/34/</id>
    <published>2019-04-04T09:36:53.000Z</published>
    <updated>2019-04-04T09:36:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>45</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;45&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>23</title>
    <link href="https://wjsummer.top/category/23/"/>
    <id>https://wjsummer.top/category/23/</id>
    <published>2019-04-04T09:36:47.000Z</published>
    <updated>2019-04-04T09:36:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>23</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;23&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>111</title>
    <link href="https://wjsummer.top/category/111/"/>
    <id>https://wjsummer.top/category/111/</id>
    <published>2019-04-04T09:36:39.000Z</published>
    <updated>2019-04-04T09:36:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>111</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;111&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>`11</title>
    <link href="https://wjsummer.top/category/11/"/>
    <id>https://wjsummer.top/category/11/</id>
    <published>2019-04-04T09:36:31.000Z</published>
    <updated>2019-04-04T09:36:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><code></code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UICollectionViewLayout的简单使用(简单瀑布流)</title>
    <link href="https://wjsummer.top/category/UICollectionViewLayout%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8-%E7%AE%80%E5%8D%95%E7%80%91%E5%B8%83%E6%B5%81/"/>
    <id>https://wjsummer.top/category/UICollectionViewLayout的简单使用-简单瀑布流/</id>
    <published>2019-04-04T08:41:49.000Z</published>
    <updated>2019-04-04T08:41:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于需要使用到列表的页面,一般是使用UITableView或者是UICollectionView来实现。一直以来都是直接使用UICollectionViewFlowLayout,基本都能实现需求功能，但是对于直接利用UICollectionViewLayout来自定义view的layout没怎么使用过，这里查了蛮多资料自己写了demo，仅供日后参考了。</p><p>###UICollectionViewLayoutAttrubutes<br>一个很重要的类主要记录了cells，supplementaryViews，decorationviews的位置，size，透明度，层级等</p><ul><li>@property (nonatomic) CGRect frame; frame信息</li><li>@property (nonatomic) CGPoint center; 中心点</li><li>@property (nonatomic) CGSize size;大小</li><li>@property (nonatomic) CATransform3D transform3D;</li><li>@property (nonatomic) CGRect bounds NS_AVAILABLE_IOS(7_0);</li><li>@property (nonatomic) CGAffineTransform transform NS_AVAILABLE_IOS(7_0);</li><li>@property (nonatomic) CGFloat alpha;透明度</li><li>@property (nonatomic) NSInteger zIndex; // default is 0  层级</li><li>@property (nonatomic, getter=isHidden) BOOL hidden; // As an optimization, UICollectionView might not create a view for items whose hidden attribute is YES</li><li>@property (nonatomic, strong) NSIndexPath *indexPath;位置</li><li>@property (nonatomic, readonly) UICollectionElementCategory representedElementCategory;</li><li>@property (nonatomic, readonly, nullable) NSString *representedElementKind; 响应类型(区分cell,supple,decaration)<br>那么当UICollectionView获取布局的时候会通过访问每个位置的部件通过其attribute来询问其布局信息</li></ul><p>###自定义一个UICollectionViewLayout<br>继承自UICollectionViewLayout类，然后一般需要重载下列方法：</p><ul><li>-(void)prepareLayout；<br>  每次请求布局时候都会自动调用，可以在这里修改一些必要的layout的结构和初始需要的参数等</li><li>-(CGSize)collectionViewContentSize；<br>定义UIcollectionView的ContentSize,内容大小</li><li>-(NSArray<uicollectionviewlayoutattributes *> *)layoutAttributesForElementsInRect:(CGRect)rect；<br>返回可见区域rect内的所有元素的布局信息<br>返回包含attributes的数组</uicollectionviewlayoutattributes></li><li>-(UICollectionViewLayoutAttributes <em>)layoutAttributesForItemAtIndexPath:(NSIndexPath </em>)indexPath；<br>定义每个indexpath的item的布局信息<br>相应的还有定义supplement以及decoration的方法 这里就不在进行列举</li><li><p>-(BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds；<br>当边界发生改变时，是否应该刷新布局。如果YES则在边界变化（一般是scroll到其他地方）时，将重新计算需要的布局信息。</p><p> ##demo<br><a href="git@github.com:w467364316/waterfallDemo.git">demo地址</a><br><img src="http://upload-images.jianshu.io/upload_images/2203462-702a9fe47adaab48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Simulator Screen Shot 2016年10月13日 上午10.52.12.png"><br>使用了一组图片和一个json文件(如果添加过后发现解析为空，在target -&gt;Build Phase - &gt;copy Bundle Resource添加需要的json文件) 正在减肥用的都是减肥励志的哈哈</p></li></ul><p>####PickModel<br>使用到的model<br>.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PicModel</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">NSString</span> *picPath;<span class="comment">//图像</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">NSString</span> *picDetail;<span class="comment">//详细内容</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>) <span class="built_in">CGFloat</span> rowHeight;<span class="comment">//行高</span></span><br><span class="line"></span><br><span class="line">+(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic;</span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><p>.m 通过detail计算高度，计算所在item的高度，这里图片的高度直接约束限制死了，可以改为按比例计算等。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"PicModel.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">PicModel</span></span></span><br><span class="line"></span><br><span class="line">+(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic&#123;</span><br><span class="line">    </span><br><span class="line">    PicModel *model = [<span class="keyword">self</span> alloc];</span><br><span class="line">    <span class="keyword">return</span> [model initWithDic:dic];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.picPath = dic[<span class="string">@"path"</span>];</span><br><span class="line">        <span class="keyword">self</span>.picDetail = dic[<span class="string">@"detail"</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">CGFloat</span> width = ([<span class="built_in">UIScreen</span> mainScreen].bounds.size.width -(MAXCOUNT - <span class="number">1</span>) * <span class="number">10</span>)/MAXCOUNT;</span><br><span class="line">        <span class="built_in">CGSize</span> size = [dic[<span class="string">@"detail"</span>] boundingRectWithSize:<span class="built_in">CGSizeMake</span>(([<span class="built_in">UIScreen</span> mainScreen].bounds.size.width -(MAXCOUNT - <span class="number">1</span>) * <span class="number">10</span>)/MAXCOUNT, MAXFLOAT) options:<span class="built_in">NSStringDrawingTruncatesLastVisibleLine</span> | <span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> | <span class="built_in">NSStringDrawingUsesFontLeading</span> attributes:@&#123;<span class="built_in">NSFontAttributeName</span>:[<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">15</span>]&#125; context:<span class="literal">nil</span>].size;</span><br><span class="line">        <span class="keyword">self</span>.rowHeight = size.height + <span class="number">59</span> *width / <span class="number">100</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><p>通过修改定义的列数<br><img src="http://upload-images.jianshu.io/upload_images/2203462-21b4b613e52fd128.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Pch文件.png"></p><p>####ViewController<br>.m文件<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"BaseViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"PicModel.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"PureLayout.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"PureCollectionViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BaseViewController</span> ()&lt;<span class="title">UICollectionViewDelegate</span>,<span class="title">UICollectionViewDataSource</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UICollectionView</span> *mainCollectionView;</span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">NSMutableArray</span> *dataArray;<span class="comment">//数据源数组</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">BaseViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view from its nib.</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.dataArray = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="comment">//解析geojson文件</span></span><br><span class="line">    <span class="built_in">NSString</span> *jsonPath = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"Detail"</span> ofType:<span class="string">@"geojson"</span>];</span><br><span class="line">    <span class="built_in">NSArray</span> *detailArr = [[<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:[<span class="built_in">NSData</span> dataWithContentsOfFile:jsonPath] options:<span class="built_in">NSJSONReadingMutableContainers</span> error:<span class="literal">nil</span>] objectForKey:<span class="string">@"data"</span></span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理model数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;<span class="number">12</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">NSString</span> *path = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d.jpg"</span>,i];</span><br><span class="line">        PicModel *model = [PicModel initWithDic:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:path,<span class="string">@"path"</span>,detailArr[i],<span class="string">@"detail"</span>, <span class="literal">nil</span>]];</span><br><span class="line">        [<span class="keyword">self</span>.dataArray addObject:model];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> definationMainCollectionView];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//添加MJRefreshFooter 添加数据</span></span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>)weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    <span class="keyword">self</span>.mainCollectionView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;<span class="number">12</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">NSString</span> *path = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d.jpg"</span>,i];</span><br><span class="line">            PicModel *model = [PicModel initWithDic:[<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:path,<span class="string">@"path"</span>,detailArr[i],<span class="string">@"detail"</span>, <span class="literal">nil</span>]];</span><br><span class="line">            [weakSelf.dataArray addObject:model];</span><br><span class="line">        &#125;</span><br><span class="line">        [weakSelf.mainCollectionView reloadData];</span><br><span class="line">        [weakSelf.mainCollectionView.mj_footer endRefreshing];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置相关UICollectionView信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)definationMainCollectionView&#123;</span><br><span class="line">    </span><br><span class="line">    PureLayout *layout = [[PureLayout alloc] init];</span><br><span class="line">    layout.dataArray = <span class="keyword">self</span>.dataArray;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.mainCollectionView = [[<span class="built_in">UICollectionView</span> alloc] initWithFrame:[<span class="built_in">UIScreen</span> mainScreen].bounds collectionViewLayout:layout];</span><br><span class="line">    [<span class="keyword">self</span>.mainCollectionView registerNib:[<span class="built_in">UINib</span> nibWithNibName:<span class="string">@"PureCollectionViewCell"</span> bundle:<span class="literal">nil</span>] forCellWithReuseIdentifier:<span class="string">@"pureCell"</span>];</span><br><span class="line">    <span class="keyword">self</span>.mainCollectionView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    <span class="keyword">self</span>.mainCollectionView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">    <span class="keyword">self</span>.mainCollectionView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.mainCollectionView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark - UICollectionViewDataSource</span></span><br><span class="line">-(<span class="built_in">NSInteger</span>)numberOfSectionsInCollectionView:(<span class="built_in">UICollectionView</span> *)collectionView&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="built_in">NSInteger</span>)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView numberOfItemsInSection:(<span class="built_in">NSInteger</span>)section&#123;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">return</span>  <span class="keyword">self</span>.dataArray.count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="built_in">UICollectionViewCell</span>*)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView cellForItemAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</span><br><span class="line">    </span><br><span class="line">    PureCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:<span class="string">@"pureCell"</span> forIndexPath:indexPath];</span><br><span class="line">    PicModel *model = <span class="keyword">self</span>.dataArray[indexPath.row];</span><br><span class="line">    cell.model = model;</span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####PureLayout<br>.h文件，这里简单的直接传递了数据源<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@interface</span> <span class="attribute">PureLayout </span>: UICollectionViewLayout</span><br><span class="line"></span><br><span class="line"><span class="variable">@property</span>(nonatomic,strong)NSArray *dataArray;<span class="comment">//数据源</span></span><br><span class="line"><span class="variable">@property</span>(nonatomic,assign) NSInteger maxCount;<span class="comment">//列数</span></span><br><span class="line"><span class="variable">@end</span></span><br></pre></td></tr></table></figure></p><p>.m文件 定义需要展示的列数，水平 垂直间隔等基本信息<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"PureLayout.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"PicModel.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">CGFloat</span> horizonalSpace = <span class="number">10</span>;<span class="comment">//水平间隔</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">CGFloat</span> verticalSpace = <span class="number">15</span>;<span class="comment">//垂直间隔</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">PureLayout</span> ()</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">NSMutableArray</span> *offSets;<span class="comment">//用于存储不同列的MAXY信息</span></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">PureLayout</span></span></span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)prepareLayout&#123;</span><br><span class="line"></span><br><span class="line">    _maxCount = MAXCOUNT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>根据需要展示的列数，使用数组分别记录每行所在列item的frame.origin.y，进行对比，设置UICollectionView的contentsize<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-(CGSize)collectionViewContentSize&#123;</span><br><span class="line">    </span><br><span class="line">    CGFloat <span class="built_in">width</span> = [UIScreen mainScreen].bounds.<span class="built_in">size</span>.<span class="built_in">width</span>;</span><br><span class="line">    CGFloat <span class="built_in">height</span> = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">   _offSets = [NSMutableArray <span class="keyword">array</span>];</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>; i&lt;_maxCount; i++) &#123;</span><br><span class="line">        [_offSets addObject:@<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;self.dataArray.count; i++) &#123;</span><br><span class="line">        NSInteger col = i % _maxCount;</span><br><span class="line">        PicModel *model = self.dataArray[i];</span><br><span class="line">        </span><br><span class="line">        CGFloat offSetY ;</span><br><span class="line">        offSetY = [_offSets[col] floatValue] + model.rowHeight + verticalSpace;</span><br><span class="line">        _offSets[col] = @(offSetY);</span><br><span class="line">        <span class="built_in">height</span> = MAX(<span class="built_in">height</span>, offSetY);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">if</span> (<span class="built_in">height</span> &lt; [UIScreen mainScreen].bounds.<span class="built_in">size</span>.<span class="built_in">height</span>) &#123;</span><br><span class="line">        <span class="built_in">height</span> = [UIScreen mainScreen].bounds.<span class="built_in">size</span>.<span class="built_in">height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> CGSizeMake(<span class="built_in">width</span>, <span class="built_in">height</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>返回可见Rect内的元素的attributes信息<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">NSArray</span>&lt;<span class="built_in">UICollectionViewLayoutAttributes</span> *&gt; *)layoutAttributesForElementsInRect:(<span class="built_in">CGRect</span>)rect&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableArray</span> * attributes = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span> ; i&lt;<span class="keyword">self</span>.dataArray.count; i++) &#123;</span><br><span class="line">        <span class="built_in">UICollectionViewLayoutAttributes</span> *attribute = [<span class="keyword">self</span> layoutAttributesForItemAtIndexPath:[<span class="built_in">NSIndexPath</span> indexPathForRow:i inSection:<span class="number">0</span>]];</span><br><span class="line">        [attributes addObject:attribute];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> attributes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对不同的indexpath的items设置attributes信息<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">UICollectionViewLayoutAttributes</span> *)layoutAttributesForItemAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UICollectionViewLayoutAttributes</span> *attribute = [<span class="built_in">UICollectionViewLayoutAttributes</span> layoutAttributesForCellWithIndexPath:indexPath];</span><br><span class="line">    PicModel *model = <span class="keyword">self</span>.dataArray[indexPath.row];</span><br><span class="line">    <span class="built_in">CGFloat</span> itemWidth = ([<span class="built_in">UIScreen</span> mainScreen].bounds.size.width - (MAXCOUNT - <span class="number">1</span>) * <span class="number">10</span>)/_maxCount;</span><br><span class="line">    attribute.size = <span class="built_in">CGSizeMake</span>(itemWidth, model.rowHeight);</span><br><span class="line">    <span class="built_in">CGFloat</span> itemY = <span class="number">0.0</span>;</span><br><span class="line">    <span class="built_in">CGFloat</span> itemX = <span class="number">0.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSInteger</span> col = indexPath.row % _maxCount;</span><br><span class="line">    itemX = (([<span class="built_in">UIScreen</span> mainScreen].bounds.size.width - (MAXCOUNT - <span class="number">1</span>) * <span class="number">10</span>)/_maxCount + horizonalSpace)* col;</span><br><span class="line">    <span class="keyword">if</span> (indexPath.row &lt;_maxCount) &#123;</span><br><span class="line">        itemY = <span class="number">0.0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">UICollectionViewLayoutAttributes</span> *otherAttribute = [<span class="keyword">self</span> layoutAttributesForItemAtIndexPath:[<span class="built_in">NSIndexPath</span> indexPathForRow:indexPath.row - _maxCount inSection:<span class="number">0</span>]];</span><br><span class="line">        itemY = <span class="built_in">CGRectGetMaxY</span>(otherAttribute.frame) + verticalSpace;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    attribute.frame = <span class="built_in">CGRectMake</span>(itemX, itemY, itemWidth,  model.rowHeight);</span><br><span class="line">    <span class="keyword">return</span> attribute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后添加上该方法，边界改变是重新布局<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">BOOL</span>)shouldInvalidateLayoutForBoundsChange:(<span class="built_in">CGRect</span>)newBounds&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>只是一个简单的额瀑布流demo，还有蛮多地方需要优化，这里仅仅写下一些基本思路。</p><p>官方给出的两个demo很有学习价值，CircleLayout以及LinLayout，在我之前的给出的参考链接里面都是可以直接下载的,对于与文章中的CircleLayout用法，insert和delete方法已经被appearing和disappearing取代了，参考的githubdemo被我fork了一份，可以进行下载学习 <a href="https://github.com/w467364316/CircleLayout.git" target="_blank" rel="noopener">https://github.com/w467364316/CircleLayout.git</a></p><p>参考资料地址：<br><a href="http://blog.csdn.net/majiakun1/article/details/17204921" target="_blank" rel="noopener">http://blog.csdn.net/majiakun1/article/details/17204921</a><br> <a href="http://www.cnblogs.com/wangyingblock/p/5627448.html" target="_blank" rel="noopener">http://www.cnblogs.com/wangyingblock/p/5627448.html</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对于需要使用到列表的页面,一般是使用UITableView或者是UICollectionView来实现。一直以来都是直接使用UICollectionViewFlowLayout,基本都能实现需求功能，但是对于直接利用UICollectionViewLayout来自定义vie
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>简单自定义选择按钮(switchDemo)</title>
    <link href="https://wjsummer.top/category/%E7%AE%80%E5%8D%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%80%89%E6%8B%A9%E6%8C%89%E9%92%AE-switchDemo/"/>
    <id>https://wjsummer.top/category/简单自定义选择按钮-switchDemo/</id>
    <published>2019-04-04T08:41:23.000Z</published>
    <updated>2019-04-04T08:41:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然系统的UISwitch效果已经很好了,附带的动画效果也是很好的,但是在实际开发中UI和程序员对头(产品经理)经常会要求按照项目的整体效果使用其他的图片或者背景来代替,这里仅在项目中做了一个简单的自定义switch.</p><p>#####demo图样<br><img src="http://upload-images.jianshu.io/upload_images/2203462-95c34978f9e5af4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="switchDemo.png"></p><p>主要是使用自定义UIView,利用背景图片的切换,和按钮图片的x的位置开实现.</p><p>这里把demo放上,方便以后查看 : <a href="https://github.com/w467364316/WJSwitchButton.git" target="_blank" rel="noopener">demo地址</a><br>WJSwitch.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WJSwitchViewDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  开关是否开启</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param isopen YES 开启  NO 关闭</span></span><br><span class="line"><span class="comment"> *  @param tag   tag值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)WJSwitchViewDelegateWithSwitchStates:(<span class="built_in">BOOL</span>)isopen withTag:(<span class="built_in">NSInteger</span>)tag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WJSwitchView</span> : <span class="title">UIView</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">weak</span>) <span class="keyword">id</span> &lt;WJSwitchViewDelegate&gt; delegate;<span class="comment">//代理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame withTag:(<span class="built_in">NSInteger</span>)tag delegate:(<span class="keyword">id</span>)delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><p>WJSwitch.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"WJSwitchView.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WJSwitchView</span> ()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">BOOL</span> isOpen;<span class="comment">//是否开启(右边为开启)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImageView</span>  * bgView;<span class="comment">//背景图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UIImageView</span>  * btnView;<span class="comment">//按钮图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>) <span class="built_in">CGFloat</span> beginpoint;<span class="comment">//开始的位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WJSwitchView</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame withTag:(<span class="built_in">NSInteger</span>)tag delegate:(<span class="keyword">id</span>)delegate&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> setFrame:frame];</span><br><span class="line">        [<span class="keyword">self</span> setBtnImageView];</span><br><span class="line">        <span class="keyword">self</span>.tag = tag;</span><br><span class="line">        <span class="keyword">self</span>.delegate = delegate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置按钮背景图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)setBtnImageView&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置背景图片</span></span><br><span class="line">    <span class="keyword">self</span>.bgView = [[<span class="built_in">UIImageView</span> alloc] initWithFrame:<span class="keyword">self</span>.bounds];</span><br><span class="line">    [<span class="keyword">self</span>.bgView setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"bgViewOff"</span>]];</span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.bgView];</span><br><span class="line">    </span><br><span class="line">    isOpen = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置按钮图片</span></span><br><span class="line">    <span class="keyword">self</span>.btnView = [[<span class="built_in">UIImageView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">2</span>, <span class="number">2</span>, <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.frame)/<span class="number">2</span>, <span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span>.frame)<span class="number">-4</span>)];</span><br><span class="line">    [<span class="keyword">self</span>.btnView setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"switchBtn"</span>]];</span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.btnView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>触摸方法<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//    UITouch * touch = [touches anyObject];</span></span><br><span class="line">    <span class="comment">//    self.beginpoint = [touch locationInView:self].x;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!isOpen) &#123;</span><br><span class="line">        [<span class="keyword">self</span> switchOpen];</span><br><span class="line">        isOpen = <span class="literal">YES</span>;</span><br><span class="line">  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> switchClose];</span><br><span class="line">        isOpen = <span class="literal">NO</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//实现协议方法 传递按钮tag和是否开启</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate  &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(WJSwitchViewDelegateWithSwitchStates: withTag:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate WJSwitchViewDelegateWithSwitchStates:isOpen withTag:<span class="keyword">self</span>.tag];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  开启</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)switchOpen&#123;</span><br><span class="line">    </span><br><span class="line">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">0.005</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        [<span class="keyword">self</span>.bgView setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"bgViewOn"</span>]];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">CGFloat</span> X = <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.frame)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">CGRect</span> frame = <span class="keyword">self</span>.btnView.frame;</span><br><span class="line">     <span class="comment">/*创建弹性动画</span></span><br><span class="line"><span class="comment">     damping:阻尼，范围0-1，阻尼越接近于0，弹性效果越明显</span></span><br><span class="line"><span class="comment">     velocity:弹性复位的速度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:<span class="number">0.2</span> delay:<span class="number">0</span> usingSpringWithDamping:<span class="number">0.8</span> initialSpringVelocity:<span class="number">1.0</span> options:<span class="built_in">UIViewAnimationOptionCurveLinear</span> animations:^&#123;</span><br><span class="line">        [<span class="keyword">self</span>.btnView setFrame:<span class="built_in">CGRectMake</span>(X, frame.origin.y, frame.size.width, frame.size.height)];</span><br><span class="line">    &#125; completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  关闭</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)switchClose&#123;</span><br><span class="line">    <span class="comment">//替换图片 这里仅做简单的图片替换</span></span><br><span class="line">    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">0.005</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        [<span class="keyword">self</span>.bgView setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"bgViewOff"</span>]];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">CGFloat</span> X = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">CGRect</span> frame = <span class="keyword">self</span>.btnView.frame;</span><br><span class="line">    <span class="comment">//修改按钮图片的位置</span></span><br><span class="line"> [<span class="built_in">UIView</span> animateWithDuration:<span class="number">0.2</span> delay:<span class="number">0</span> usingSpringWithDamping:<span class="number">0.9</span> initialSpringVelocity:<span class="number">1.0</span> options:<span class="built_in">UIViewAnimationOptionCurveLinear</span> animations:^&#123;</span><br><span class="line">         [<span class="keyword">self</span>.btnView setFrame:<span class="built_in">CGRectMake</span>(X, frame.origin.y, frame.size.width, frame.size.height)];</span><br><span class="line">    &#125; completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>viewController.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//创建view</span></span><br><span class="line">    WJSwitchView * firstView = [[WJSwitchView alloc] initWithFrame:<span class="keyword">self</span>.firstSwitchView.bounds withTag:<span class="number">1</span> delegate:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span>.firstSwitchView addSubview:firstView];</span><br><span class="line">    </span><br><span class="line">    WJSwitchView * secondView = [[WJSwitchView alloc] initWithFrame:<span class="keyword">self</span>.firstSwitchView.bounds withTag:<span class="number">2</span> delegate:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span>.secondSwitchView addSubview:secondView];</span><br><span class="line">    </span><br><span class="line">    WJSwitchView * thirdView = [[WJSwitchView alloc] initWithFrame:<span class="keyword">self</span>.firstSwitchView.bounds withTag:<span class="number">3</span> delegate:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span>.thirdSwitchView addSubview:thirdView];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#pragma mark - WJSwitchViewDelegate</span></span><br><span class="line"><span class="comment">//协议方法</span></span><br><span class="line">-(<span class="keyword">void</span>)WJSwitchViewDelegateWithSwitchStates:(<span class="built_in">BOOL</span>)isopen withTag:(<span class="built_in">NSInteger</span>)tag&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%ld"</span>,tag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>按钮的位置移动可以使用CAAnimation做一些简单的动画过度,或者直接使用UIView的封装方法实现一些效果来实现,关于动画的一些基本应用,在文集中有转载一篇写的特好的文章讲动画的!!建议自己可以跟着敲一次!!<br>PS:能用自带插件最好劝说需求用吧,毕竟系统的很强大!  ~~不过我和我们需求谈判失败了…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然系统的UISwitch效果已经很好了,附带的动画效果也是很好的,但是在实际开发中UI和程序员对头(产品经理)经常会要求按照项目的整体效果使用其他的图片或者背景来代替,这里仅在项目中做了一个简单的自定义switch.&lt;/p&gt;
&lt;p&gt;#####demo图样&lt;br&gt;&lt;img 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>环形进度条的简单实现</title>
    <link href="https://wjsummer.top/category/%E7%8E%AF%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <id>https://wjsummer.top/category/环形进度条的简单实现/</id>
    <published>2019-04-04T08:40:56.000Z</published>
    <updated>2019-04-04T08:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<h6 id="小牢骚"><a href="#小牢骚" class="headerlink" title="小牢骚"></a>小牢骚</h6><p>好久没有记录文章了,近期在学习前端的相关知识,也没有好好的静下心来整理东西,这次准备把之前自己用到的东西做一个总结,方便以后自己查阅.</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>这次记录使用CALayer创建一个环形进度条的view,加上简单的动画,项目中刚好有使用到。<br>效果图：<br><img src="http://upload-images.jianshu.io/upload_images/2203462-b354fa97e09dd7e2.gif?imageMogr2/auto-orient/strip" alt="porgressView.gif"><br>要点： 主要使用layer的mask属性，mask属性可以让layer只显示遮罩层上面的路径（环形）</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在进度值为0的时候，有一个黄色的底色，然后进度条的颜色是渐变的，底色环形可以通过给view的layer添加一个带环形路径的CAShapeLayer作为mask,渐变色可以使用CAGrandientLayer创建一个渐变图层，然后创建一个带环形路径的CAShapeLayer,将其作为渐变图层的mask，这样就能达到预期的效果</p><h3 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h3><ul><li>CAGradientLayer<br>创建渐变色layer,他是继承自CALayer的一个用于绘制多色图层的子类，主要用于设置的属性值为<ul><li>@property(nullable, copy) NSArray *colors;<br>设置需要加载的颜色数组（CGColorRef类型）</li><li>@property(nullable, copy) NSArray<nsnumber *> *locations;<br>不同颜色值的分布分割点（NSNumber类型）</nsnumber></li><li>@property CGPoint startPoint;</li><li>@property CGPoint endPoint;</li></ul></li></ul><p>具体的相关详细解析这里引用一篇文章:<a href="CAGradientLayer">CAGradientLayer详细使用</a><br>本文中使用到的只是简单的创建三个颜色值的图层<br> <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CAGradientLayer</span> *layer = [<span class="built_in">CAGradientLayer</span> layer];</span><br><span class="line">    layer.frame = <span class="keyword">self</span>.bounds;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *muColors = [<span class="built_in">NSMutableArray</span> array];<span class="comment">//颜色数组，放置CGColorref</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.colors) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.colors enumerateObjectsUsingBlock:^(<span class="keyword">id</span>  _Nonnull obj, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</span><br><span class="line">            <span class="keyword">if</span> ([obj isKindOfClass:[<span class="built_in">UIColor</span> <span class="keyword">class</span>]]) &#123;</span><br><span class="line">                <span class="built_in">UIColor</span> *color = (<span class="built_in">UIColor</span> *)obj;</span><br><span class="line">                [muColors addObject:(<span class="keyword">id</span>)color.CGColor];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//设置两组白色</span></span><br><span class="line">        [muColors addObject:(<span class="keyword">id</span>)[<span class="built_in">UIColor</span> whiteColor].CGColor];</span><br><span class="line">        [muColors addObject:(<span class="keyword">id</span>)[<span class="built_in">UIColor</span> whiteColor].CGColor];</span><br><span class="line">    &#125;</span><br><span class="line">    layer.colors = muColors;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.locations) &#123;</span><br><span class="line">        <span class="comment">//随便设置两组分割点</span></span><br><span class="line">        <span class="keyword">self</span>.locations = [<span class="built_in">NSMutableArray</span> arrayWithObjects:@<span class="number">0.1</span>, @<span class="number">0.9</span>,<span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    layer.locations = <span class="keyword">self</span>.locations;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> layer;</span><br></pre></td></tr></table></figure></p><p>代码中的self.colors为包含UICololr的颜色数组，self.locations为包含NSNumber值的数组<br>颜色值设为@[COLOR(100, 150, 0, 1),COLOR(0, 150, 130, 1),COLOR(60, 0, 190, 1)];location设置为@[@0.1,0.5,0.9]，效果如下<br><img src="http://upload-images.jianshu.io/upload_images/2203462-a061b89e06540d0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="渐变色图层.png"></p><ul><li>CAShaprLayer 一个很强大的CALayer子类，由于其可以添加path路径，因此可以绘制出很多复杂的图形。这里也引用一篇之前看过的不错的博客：<a href="http://www.cocoachina.com/ios/20160214/15251.html" target="_blank" rel="noopener">关于CAShapeLayer和UIBzierPath的使用</a><br>本文中主要使用CAShapeLayer创建一个环形路径的图层<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#define DEGREES_TO_ANGLE(x) (M_PI * (x) / 180.0) // 将角度转为弧度</span></span><br><span class="line"><span class="built_in">CAShapeLayer</span> *layer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    layer.frame = <span class="keyword">self</span>.bounds;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path =  [<span class="built_in">UIBezierPath</span> bezierPathWithArcCenter:<span class="built_in">CGPointMake</span>(<span class="keyword">self</span>.bounds.size.width / <span class="number">2</span>, <span class="keyword">self</span>.bounds.size.height / <span class="number">2</span>) radius:<span class="keyword">self</span>.bounds.size.width / <span class="number">2.5</span> startAngle:DEGREES_TO_ANGLE(<span class="number">-90</span>) endAngle:DEGREES_TO_ANGLE(<span class="number">270</span>) clockwise:<span class="literal">YES</span>]; <span class="comment">//注意这里的半径,应该为宽度1/2-linewidth/2</span></span><br><span class="line">    layer.lineWidth = <span class="keyword">self</span>.lineWidth; <span class="comment">//线的宽度</span></span><br><span class="line">    layer.path = path.CGPath;</span><br><span class="line">    layer.fillColor = [<span class="built_in">UIColor</span> clearColor].CGColor; <span class="comment">//设置填充颜色</span></span><br><span class="line">    layer.strokeColor = [<span class="built_in">UIColor</span> blackColor].CGColor; <span class="comment">// 设置画笔颜色</span></span><br><span class="line">    layer.lineCap = kCALineCapRound; <span class="comment">// 设置线为圆角</span></span><br></pre></td></tr></table></figure></li></ul><p>其中需要注意的点：</p><ul><li>这里的坐标系和数学中的坐标系是反的，简单的理解就是-90°等价数学坐标系中的90°，90°等价数学坐标系中的270°，所以如果希望进度条从顶部按照顺时针走，那么在设置UIBezierPath画圆弧的时候就应该为clockwise：yes(顺时针)，startangle(开始弧度)：(-90°对应的弧度)，endangle：(270°对应的弧度)，这样就是生成按照顺时针方向从-90°的点到270°的点之间的路径。<br>如下图片中不同的角度对应的效果图：<br><img src="http://upload-images.jianshu.io/upload_images/2203462-e1aee6e4ee8cd594.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="多种弧度的圆弧.png"></li><li>在选择半径时，如果fram宽度为100，希望绘制一个宽度20紧靠边缘的环形，那么半径应该是50-20/2，并不是50-20。</li></ul><h3 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h3><p>progressView.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span> (<span class="built_in">NSInteger</span>, WJStrokeType)<span class="comment">//动画方式</span></span><br><span class="line">&#123;</span><br><span class="line">    WJStrokeTypeStart, <span class="comment">//开始</span></span><br><span class="line">    WJStrokeTypeEnd <span class="comment">//结束</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//动画结束回调</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^ProgressEnd)();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WJProgressView</span> : <span class="title">UIView</span></span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  线宽</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>)<span class="built_in">CGFloat</span> lineWidth;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  背景颜色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>)<span class="built_in">UIColor</span> *bgColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  渐变色颜色组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>)<span class="built_in">NSArray</span> *colors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  颜色分割位置数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>)<span class="built_in">NSArray</span> *locations;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  隐藏百分比label</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)hidePercent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置创建图层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)startProress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  更新progress</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param value progress Value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)reloadValue:(<span class="built_in">CGFloat</span>)value;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  进度动画</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param beginValue 开始value</span></span><br><span class="line"><span class="comment"> *  @param endValue   结束value</span></span><br><span class="line"><span class="comment"> *  @param duration   动画持续时间</span></span><br><span class="line"><span class="comment"> *  @param type       动画类型</span></span><br><span class="line"><span class="comment"> *  @param endBlock   动画结束回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)setprogressFromValue:(<span class="built_in">CGFloat</span>)beginValue endValue:(<span class="built_in">CGFloat</span>)endValue duration:(<span class="built_in">CGFloat</span>)duration strokeType:(WJStrokeType)type end:(ProgressEnd)endBlock;</span><br></pre></td></tr></table></figure></p><p>.m<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (void)setprogressFromValue:(CGFloat)<span class="keyword">beginValue </span>endValue:(CGFloat)endValue duration:(CGFloat)time strokeType:(WJStrokeType)type end:(ProgressEnd)endBlock</span><br><span class="line">&#123;</span><br><span class="line">    if (<span class="keyword">beginValue </span>&gt;= <span class="number">1</span>.<span class="number">0</span>) &#123;</span><br><span class="line">        endBlock()<span class="comment">;</span></span><br><span class="line">        return<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    _endValue = endValue<span class="comment">;</span></span><br><span class="line">    self.animationEnd = endBlock<span class="comment">;</span></span><br><span class="line">    NSString *animationName = @<span class="string">"strokeStart"</span><span class="comment">;</span></span><br><span class="line">    if (type) &#123;</span><br><span class="line">        animationName = @<span class="string">"strokeEnd"</span><span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    CABasicAnimation *pathAnimation = [CABasicAnimation animationWithKeyPath:animationName]<span class="comment">;</span></span><br><span class="line">    pathAnimation.duration = time<span class="comment">;</span></span><br><span class="line">    pathAnimation.timingFunction = [CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionLinear]<span class="comment">;</span></span><br><span class="line">    pathAnimation.fromValue = [NSNumber numberWithFloat:<span class="keyword">beginValue];</span></span><br><span class="line"><span class="keyword"> </span>   pathAnimation.toValue = [NSNumber numberWithFloat:endValue]<span class="comment">;</span></span><br><span class="line">    pathAnimation.autoreverses = NO<span class="comment">;</span></span><br><span class="line">    pathAnimation.delegate = self<span class="comment">;</span></span><br><span class="line">    pathAnimation.removedOnCompletion = NO<span class="comment">;</span></span><br><span class="line">    pathAnimation.fillMode = kCAFillModeForwards<span class="comment">;</span></span><br><span class="line">    [self.colorMaskLayer <span class="keyword">addAnimation:pathAnimation </span>forKey:@<span class="string">"strokeAnimation"</span>]<span class="comment">;</span></span><br><span class="line">    </span><br><span class="line">    [self creatTimerFromValue:<span class="keyword">beginValue </span>endValue:endValue duration:time]<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对于cCAShapeLayer，stokeEnd和strokestart属性都直接动画操作。<br>在动画过程中关于中间percentLabel的显示，使用定时器设置时间间隔实现变化。<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 创建定时器在layer animation过程中改变percent</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param beginValue 初始值</span></span><br><span class="line"><span class="comment"> @param endValue 结束值</span></span><br><span class="line"><span class="comment"> @param time 时间间隔</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)creatTimerFromValue:(CGFloat)<span class="keyword">beginValue </span>endValue:(CGFloat)endValue duration:(CGFloat)time</span><br><span class="line">&#123;</span><br><span class="line">    __block CGFloat <span class="keyword">beginPercent </span>= <span class="keyword">beginValue;</span></span><br><span class="line"><span class="keyword"> </span>   CGFloat timeInterval = <span class="number">0</span>.<span class="number">1</span><span class="comment">;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">dispatch_queue_t </span>queue = <span class="keyword">dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, </span><span class="number">0</span>)<span class="comment">;</span></span><br><span class="line">    self.timer = <span class="keyword">dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, </span><span class="number">0</span>, <span class="number">0</span>, queue)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">dispatch_source_set_timer(self.timer, </span><span class="keyword">dispatch_walltime(NULL, </span><span class="number">0</span>), timeInterval*NSEC_PER_SEC, <span class="number">0</span>)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">dispatch_source_set_event_handler(self.timer, </span>^&#123;</span><br><span class="line">        <span class="keyword">dispatch_async(dispatch_get_main_queue(), </span>^&#123;</span><br><span class="line">            CGFloat <span class="keyword">difference </span>= endValue - <span class="keyword">beginValue;</span></span><br><span class="line"><span class="keyword"> </span>           CGFloat <span class="keyword">addValue </span>= <span class="keyword">difference/time/(1/timeInterval);</span></span><br><span class="line"><span class="keyword"> </span>           <span class="keyword">beginPercent </span>+= <span class="keyword">addValue;</span></span><br><span class="line"><span class="keyword"> </span>           if (<span class="keyword">beginPercent </span>&gt;= endValue)  <span class="keyword">beginPercent </span>= endValue<span class="comment">;</span></span><br><span class="line">            if (<span class="keyword">beginPercent </span>&gt;= <span class="number">1</span>.<span class="number">0</span>)  <span class="keyword">beginPercent </span>= <span class="number">1</span>.<span class="number">0</span>f<span class="comment">;</span></span><br><span class="line">            [self reloadPercentLabelValue:<span class="keyword">beginPercent];</span></span><br><span class="line"><span class="keyword"> </span>       &#125;)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">dispatch_resume(_timer);</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br></pre></td></tr></table></figure></p><p>注意点：dispatch_source_t 的创建定一个属性值来保存。不要直接在方法中创建。<br>在动画结束后对timer进行销毁处理。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)animationDidStop:(<span class="built_in">CAAnimation</span> *)anim finished:(<span class="built_in">BOOL</span>)flag</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.animationEnd) <span class="keyword">self</span>.animationEnd();</span><br><span class="line">    [<span class="keyword">self</span>.colorMaskLayer removeAnimationForKey:<span class="string">@"strokeAnimation"</span>];</span><br><span class="line">    <span class="keyword">self</span>.colorMaskLayer.strokeEnd = _endValue;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.timer) &#123;</span><br><span class="line">        dispatch_source_cancel(<span class="keyword">self</span>.timer);</span><br><span class="line">        <span class="keyword">self</span>.timer = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>End    <a href="https://github.com/w467364316/CircleProgressView.git" target="_blank" rel="noopener">demo地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;小牢骚&quot;&gt;&lt;a href=&quot;#小牢骚&quot; class=&quot;headerlink&quot; title=&quot;小牢骚&quot;&gt;&lt;/a&gt;小牢骚&lt;/h6&gt;&lt;p&gt;好久没有记录文章了,近期在学习前端的相关知识,也没有好好的静下心来整理东西,这次准备把之前自己用到的东西做一个总结,方便以后自己查阅
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UITextView-placeholder的实现和解析</title>
    <link href="https://wjsummer.top/category/UITextView-placeholder%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%92%8C%E8%A7%A3%E6%9E%90/"/>
    <id>https://wjsummer.top/category/UITextView-placeholder的实现和解析/</id>
    <published>2019-04-04T08:18:40.000Z</published>
    <updated>2019-04-04T08:39:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><h5 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h5><p>项目中UITextfield使用的比较频繁，对于placeholder可以直接设置，文字，颜色，字体等等，但是UITextView继承自UIScrollView,并没有placeholder属性。项目中以前就有使用到UITextView的placeholder,当时只是外加了一个UILabel,但是每次都需要重新定制label，所以想着能够写一个类别，添加一个label，实现字体，颜色，位置的可调节。</p><p>这里主要是在GitHub上面发现一个很好的类别，该类别的编写者也是我所喜欢的一位iOS开发者。自己尝试写了一次，有了一定的了解，所以记录下来，方便以后查阅。<br>Demo地址：<a href="http://git.oschina.net/W-Jian/UITextView_placeholder" target="_blank" rel="noopener">码云demo下载地址</a></p><h5 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h5><p>首先先上图看看效果：<br>默认效果图：<br><img src="http://upload-images.jianshu.io/upload_images/2203462-7760a2edcc736f86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="defalut_placeholder.png"><br>设置颜色和location图：<br><img src="http://upload-images.jianshu.io/upload_images/2203462-e23a9c34f5d03ec3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="color_location_placeholder.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2203462-9668d7416ecf48b4.gif?imageMogr2/auto-orient/strip" alt="placeholder.gif"><br>下面开始解析代码<br>根据意图，也是在UITextView中添加一个UILabel,然后添加文字，颜色，富文本，位置等属性，实现placeholder的可定制。</p><h4 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h4><h5 id="h-解析"><a href="#h-解析" class="headerlink" title=".h 解析"></a>.h 解析</h5><ul><li>(readOnly)UILabel *placeholdLabel</li><li>NSString *placeholder placeholder                   文字</li><li>UIColor *placeholderColor                                  颜色</li><li>NSAttributedString *attributePlaceholder        富文本</li><li>CGPoint location                                                   位置</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UITextView</span> (<span class="title">WJPlaceholder</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>)  <span class="built_in">UILabel</span> *placeholdLabel;</span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) IBInspectable <span class="built_in">NSString</span> *placeholder;</span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) IBInspectable <span class="built_in">UIColor</span> *placeholderColor;</span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonnull</span>,<span class="keyword">strong</span>) <span class="built_in">NSAttributedString</span> *attributePlaceholder;</span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">assign</span>) <span class="built_in">CGPoint</span> location;</span><br><span class="line">+ (<span class="built_in">UIColor</span> *)defaultColor; <span class="comment">//获取默认颜色（选取UITextFiled的placeholder颜色）</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>使用IBInspectable修饰，可以使该属性在interface builder中进行编辑。placeholder和placeholder color都可以在user defined runtime attributes中进行配置，如下图：</p><p><img src="http://upload-images.jianshu.io/upload_images/2203462-d5be40ffdc4df595.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="UITextViewKeyPath.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2203462-ca38c48721b234ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="kvc_placeholder.png"></p><h5 id="m-解析"><a href="#m-解析" class="headerlink" title=".m 解析"></a>.m 解析</h5><p>首先设置三个key值，用于关联属性的创建和获取<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *labelKey = <span class="string">"placeholderKey"</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *needAdjust = <span class="string">"needAdjust"</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *changeLocation = <span class="string">"location"</span>;</span><br></pre></td></tr></table></figure></p><p>创建的类别是不支持添加属性的，要实现属性的可设置，可以使用runtime来动态设置和获取属性值。<br>runtime添加关联属性<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">objc_setAssociatedObject</span>(<span class="params">id <span class="keyword">object</span>, <span class="keyword">const</span> <span class="keyword">void</span> *key, id <span class="keyword">value</span>, objc_AssociationPolicy policy</span>)</span></span><br></pre></td></tr></table></figure></p><p>第一个参数(object)表示要添加属性的类，第二参数(const void *key)为一个key值，用来获取设置的属性值，第三个参数(value)为属性的值，第四个参数(objc_AssociationPolicy policy)为属性的修饰类型：一共有5个可选项：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">typedef OBJC_ENUM(uintptr_t, objc_AssociationPolicy) &#123;</span><br><span class="line">    OBJC_ASSOCIATION_ASSIGN = <span class="number">0</span>,           <span class="comment">/**&lt; Specifies a weak reference to the associated object. */</span></span><br><span class="line">    OBJC_ASSOCIATION_RETAIN_NONATOMIC = <span class="number">1</span>, <span class="comment">/**&lt; Specifies a strong reference to the associated object. </span></span><br><span class="line"><span class="comment">                                            *   The association is not made atomically. */</span></span><br><span class="line">    OBJC_ASSOCIATION_COPY_NONATOMIC = <span class="number">3</span>,   <span class="comment">/**&lt; Specifies that the associated object is copied. </span></span><br><span class="line"><span class="comment">                                            *   The association is not made atomically. */</span></span><br><span class="line">    OBJC_ASSOCIATION_RETAIN = <span class="number">01401</span>,       <span class="comment">/**&lt; Specifies a strong reference to the associated object.</span></span><br><span class="line"><span class="comment">                                            *   The association is made atomically. */</span></span><br><span class="line">    OBJC_ASSOCIATION_COPY = <span class="number">01403</span>          <span class="comment">/**&lt; Specifies that the associated object is copied.</span></span><br><span class="line"><span class="comment">                                            *   The association is made atomically. */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>分别对应assign,retain_nonatomic,copy_nonatomic,retain,copy。</p><p>runtime获取成员属性方法为：<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">id</span> objc_getAssociatedObject(<span class="keyword">id</span> object, <span class="keyword">const</span> <span class="keyword">void</span> *key)</span><br></pre></td></tr></table></figure></p><p>第一个参数（object）为属性所属的类，一般使用self，第二个参数（key）为key值，和设置关联属性时使用的key一样。</p><p>placeholderLabel为readOnly，重写其get方法。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置placeholderLabel</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @return label</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UILabel</span> *)placeholdLabel</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">UILabel</span> *label = objc_getAssociatedObject(<span class="keyword">self</span>, labelKey);</span><br><span class="line">    <span class="keyword">if</span> (!label) &#123;</span><br><span class="line">        label = [[<span class="built_in">UILabel</span> alloc] init];</span><br><span class="line">        label.textAlignment = <span class="built_in">NSTextAlignmentLeft</span>;</span><br><span class="line">        label.numberOfLines = <span class="number">0</span>;</span><br><span class="line">        label.textColor = [<span class="keyword">self</span>.class defaultColor];</span><br><span class="line">        objc_setAssociatedObject(<span class="keyword">self</span>, labelKey, label, OBJC_ASSOCIATION_RETAIN_NONATOMIC);</span><br><span class="line">        <span class="comment">//添加通知</span></span><br><span class="line">        [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(updateLabel) name:<span class="built_in">UITextViewTextDidChangeNotification</span> object:<span class="literal">nil</span>];</span><br><span class="line">        <span class="comment">//监听font的变化</span></span><br><span class="line">        [<span class="keyword">self</span> addObserver:<span class="keyword">self</span> forKeyPath:<span class="string">@"font"</span> options:<span class="built_in">NSKeyValueObservingOptionNew</span> context:<span class="literal">nil</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> label;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  设置默认颜色</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @return color</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">+ (<span class="built_in">UIColor</span> *)defaultColor</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">UIColor</span> *color = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> once_t;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;once_t, ^&#123;</span><br><span class="line">       <span class="built_in">UITextField</span> *textField = [[<span class="built_in">UITextField</span> alloc] init];</span><br><span class="line">       textField.placeholder = <span class="string">@" "</span>;</span><br><span class="line">       color = [textField valueForKeyPath:<span class="string">@"_placeholderLabel.textColor"</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建UILabel时，设置基本属性，这里采用UITextfiled的placeholder的颜色作为默认颜色。<br>同时添加对UITextView的状态通知，UITextView主要有以下几个通知可供使用<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextViewTextDidBeginEditingNotification</span>;</span><br><span class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextViewTextDidChangeNotification</span>;</span><br><span class="line"><span class="built_in">UIKIT_EXTERN</span> <span class="built_in">NSNotificationName</span> <span class="keyword">const</span> <span class="built_in">UITextViewTextDidEndEditingNotification</span>;</span><br></pre></td></tr></table></figure></p><p>这里使用UITextViewTextDidChangeNotification，在text改变的时候执行updateLabel方法，进行label的显示和隐藏以及其他设置。<br>对于UITextView的字体，使用KVO监听UITextView的font属性，在设置时改变placeholderLabel的font。</p><p>以下是一些成员属性的set get方法，通过set方法，将text,color,attributedText赋给placeholderLabel。<br>该类别主要使用runtime创建了3个关联属性，分别为</p><ul><li>placeholderLabel  </li><li>location             CGPoint 位置</li><li>needAdJust       BOOL 判断是否需要调整</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)setPlaceholder:(<span class="built_in">NSString</span> *)placeholder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.placeholdLabel.text = placeholder;</span><br><span class="line">    [<span class="keyword">self</span> updateLabel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSString</span> *)placeholder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.placeholdLabel.text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setPlaceholderColor:(<span class="built_in">UIColor</span> *)placeholderColor</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.placeholdLabel.textColor = placeholderColor;</span><br><span class="line">    [<span class="keyword">self</span> updateLabel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIColor</span> *)placeholderColor</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.placeholdLabel.textColor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setAttributePlaceholder:(<span class="built_in">NSAttributedString</span> *)attributePlaceholder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span>.placeholdLabel.attributedText = attributePlaceholder;</span><br><span class="line">    [<span class="keyword">self</span> updateLabel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSAttributedString</span> *)attributePlaceholder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.placeholdLabel.attributedText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setLocation:(<span class="built_in">CGPoint</span>)location</span><br><span class="line">&#123;</span><br><span class="line">    objc_setAssociatedObject(<span class="keyword">self</span>, changeLocation,<span class="built_in">NSStringFromCGPoint</span>(location), OBJC_ASSOCIATION_RETAIN_NONATOMIC);</span><br><span class="line">    [<span class="keyword">self</span> updateLabel];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="built_in">CGPoint</span>)location</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CGPointFromString</span>(objc_getAssociatedObject(<span class="keyword">self</span>, changeLocation));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否需要调整字体</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)needAdjustFont</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [objc_getAssociatedObject(<span class="keyword">self</span>, needAdjust) boolValue ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setNeedAdjustFont:(<span class="built_in">BOOL</span>)needAdjustFont</span><br><span class="line">&#123;</span><br><span class="line">    objc_setAssociatedObject(<span class="keyword">self</span>, needAdjust, @(needAdjustFont), OBJC_ASSOCIATION_ASSIGN);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KVO 监听方法，判断是否是font，执行updataLabel方法。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath ofObject:(<span class="keyword">id</span>)object change:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSKeyValueChangeKey</span>,<span class="keyword">id</span>&gt; *)change context:(<span class="keyword">void</span> *)context</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([keyPath isEqualToString:<span class="string">@"font"</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">self</span>.needAdjustFont = <span class="literal">YES</span>;</span><br><span class="line">         [<span class="keyword">self</span> updateLabel];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下面则是更新placeholderLabel的主要方法，调整位置，字体等。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  更新label信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)updateLabel</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.text.length) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.placeholdLabel removeFromSuperview];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示label</span></span><br><span class="line">    [<span class="keyword">self</span> insertSubview:<span class="keyword">self</span>.placeholdLabel atIndex:<span class="number">0</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//是否需要更新字体（NO 采用默认字体大小）</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.needAdjustFont) &#123;</span><br><span class="line">        <span class="keyword">self</span>.placeholdLabel.font = <span class="keyword">self</span>.font;</span><br><span class="line">        <span class="keyword">self</span>.needAdjustFont = <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">CGFloat</span>  lineFragmentPadding =  <span class="keyword">self</span>.textContainer.lineFragmentPadding;  <span class="comment">//边距</span></span><br><span class="line">   <span class="built_in">UIEdgeInsets</span> contentInset = <span class="keyword">self</span>.textContainerInset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置label frame</span></span><br><span class="line">    <span class="built_in">CGFloat</span> labelX = lineFragmentPadding + contentInset.left;</span><br><span class="line">    <span class="built_in">CGFloat</span> labelY = contentInset.top;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.location.x != <span class="number">0</span> || <span class="keyword">self</span>.location.y != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.location.x &lt; <span class="number">0</span> || <span class="keyword">self</span>.location.x &gt; <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.bounds) - lineFragmentPadding - contentInset.right || <span class="keyword">self</span>.location.y&lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 不做处理</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            labelX += <span class="keyword">self</span>.location.x;</span><br><span class="line">            labelY += <span class="keyword">self</span>.location.y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CGFloat</span> labelW = <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span>.bounds)  - contentInset.right - labelX;</span><br><span class="line">    <span class="built_in">CGFloat</span> labelH = [<span class="keyword">self</span>.placeholdLabel sizeThatFits:<span class="built_in">CGSizeMake</span>(labelW, MAXFLOAT)].height;</span><br><span class="line">    <span class="keyword">self</span>.placeholdLabel.frame = <span class="built_in">CGRectMake</span>(labelX, labelY, labelW, labelH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> 对于placeholderLabel的frame设置，需要考虑几个方面：</p><ul><li>lineFragmentPadding  UITextView textContainer边距</li><li>contentInset  输入区域偏移 UIEdgeInsets</li><li>location    设置的位置</li><li>labeltextHeight  placeholder的text高度</li></ul><blockquote><p>placeholder的frame.orgin.x = 边距lineFragmentPadding + contentInset.left + location.x;<br>frame.orgin.y = contentInset.top + location.y;<br>frame.size.width = UITextView的宽度 - placeholder的frame.orgin.x - contentInset.right;<br>frame.height = placeholder.text的高度</p></blockquote><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>以上就是关于整个UITextView_placeholder的学习解剖，学到了一些新的知识，如果大家有什么意见和建议可以给我留言，指出我的不对的地方，大家一起学习交流。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;h5 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h5&gt;&lt;p&gt;项目中
      
    
    </summary>
    
      <category term="iOS" scheme="https://wjsummer.top/categories/iOS/"/>
    
    
      <category term="Objective-C UI" scheme="https://wjsummer.top/tags/Objective-C-UI/"/>
    
  </entry>
  
  <entry>
    <title>GCD倒计时Demo</title>
    <link href="https://wjsummer.top/category/GCD%E5%80%92%E8%AE%A1%E6%97%B6Demo/"/>
    <id>https://wjsummer.top/category/GCD倒计时Demo/</id>
    <published>2019-04-04T08:06:12.000Z</published>
    <updated>2019-04-04T08:39:40.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>这次的项目里面有涉及到商品的倒计时功能，UIcollectionview中罗列商品进行倒计时，以前顶多就是密码找回，获取验证码，或者轮播图简单的使用了一下NSTimer。之前还因为timer使用不恰当造成了内存持续飙高，直接crash的情况。。。销毁timer需要使用invalidate，直接设置nil并不能销毁。</p><p>这次使用GCD定时器进行功能简单实现，其中也是找了一些资料，看了其他大神的代码，然后自己写了一个demo，仅作为笔记方便以后自己查看，完善。<br><a href="https://github.com/w467364316/GoodTimerDemo.git" target="_blank" rel="noopener">demo地址</a></p><p><strong>示例图</strong>：<br><img src="http://upload-images.jianshu.io/upload_images/2203462-b82a6a996dd07c05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="demo图.png"></p><h5 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h5><hr><p>放代码：<br>工具类.h</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@interface</span> <span class="string">CutDown :</span> NSObject</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)<span class="string">creatTimerWit:</span>(<span class="keyword">void</span>(^)())completeBlock;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)destroyTimer;</span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure><p>创建定时器，设定间隔时间为0.1秒<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CutDown</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) dispatch_source_t timer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CutDown</span></span></span><br><span class="line">-(<span class="keyword">void</span>)creatTimerWit:(<span class="keyword">void</span>(^)())completeBlock&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_timer == <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">dispatch_queue_t</span> queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>);</span><br><span class="line">        _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, <span class="number">0</span>, <span class="number">0</span>, queue);</span><br><span class="line">        dispatch_source_set_timer(_timer, dispatch_walltime(<span class="literal">NULL</span>, <span class="number">0</span>), <span class="number">0.1</span>*<span class="built_in">NSEC_PER_SEC</span>, <span class="number">0</span>);</span><br><span class="line">        dispatch_source_set_event_handler(_timer, ^&#123;</span><br><span class="line">           <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">               completeBlock();</span><br><span class="line">           &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        dispatch_resume(_timer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)destroyTimer&#123;</span><br><span class="line">    <span class="keyword">if</span> (_timer) &#123;</span><br><span class="line">        dispatch_source_cancel(_timer);</span><br><span class="line">        _timer = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><p>viewController内部，在viewDidLoad方法中调用cutDown 创建定时器<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="comment">// Do any additional setup after loading the view from its nib.</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.myCollection.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    <span class="keyword">self</span>.dataArray = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">    [<span class="keyword">self</span>.myCollection registerNib:[<span class="built_in">UINib</span> nibWithNibName:<span class="string">@"TimerCollectionViewCell"</span> bundle:<span class="literal">nil</span>] forCellWithReuseIdentifier:<span class="string">@"timeCell"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *path = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"GoodsTimes"</span> ofType:<span class="string">@".plist"</span>];</span><br><span class="line">    <span class="built_in">NSArray</span> *array = [<span class="built_in">NSArray</span> arrayWithContentsOfFile:path];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSDictionary</span> *dic <span class="keyword">in</span> array) &#123;</span><br><span class="line">        GoodTimeModel *model = [GoodTimeModel initWithDic:dic];</span><br><span class="line">        [<span class="keyword">self</span>.dataArray addObject:model];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//开始进行计时</span></span><br><span class="line">    <span class="keyword">self</span>.cutDown = [[CutDown alloc] init];</span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.cutDown creatTimerWit:^&#123;</span><br><span class="line">        [weakSelf updateVisialCells];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2203462-7a479d21dd209a6a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="plist.png"><br>GoodTimeModel参数<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GoodTimeModel</span> : <span class="title">NSObject</span></span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *number;<span class="comment">//序号</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *beginTime;<span class="comment">//开始时间</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *time;<span class="comment">//时间</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">copy</span>) <span class="built_in">NSString</span> *minSecond;<span class="comment">//毫秒</span></span><br><span class="line"></span><br><span class="line">+(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic;</span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithDic:(<span class="built_in">NSDictionary</span>*)dic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p><p>更新当前视图内的cell的显示信息<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  更新cell</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)updateVisialCells&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSArray</span> *cells = <span class="keyword">self</span>.myCollection.visibleCells;</span><br><span class="line">    <span class="keyword">for</span> (TimerCollectionViewCell *cell <span class="keyword">in</span> cells) &#123;</span><br><span class="line">        GoodTimeModel *model = <span class="keyword">self</span>.dataArray[cell.tag];</span><br><span class="line">        <span class="keyword">int</span> minSec = [model.minSecond intValue];</span><br><span class="line">        <span class="keyword">if</span> (minSec &lt;=<span class="number">0</span>) &#123;</span><br><span class="line">            minSec = <span class="number">9</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            minSec --;</span><br><span class="line">        &#125;</span><br><span class="line">        model.minSecond = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d"</span>,minSec];</span><br><span class="line">        cell.model = model;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>设置cell部分<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-(UICollectionViewCell*)<span class="string">collectionView:</span>(UICollectionView *)collectionView <span class="string">cellForItemAtIndexPath:</span>(NSIndexPath *)indexPath&#123;</span><br><span class="line">    </span><br><span class="line">    TimerCollectionViewCell *cell = [collectionView <span class="string">dequeueReusableCellWithReuseIdentifier:</span>@<span class="string">"timeCell"</span> <span class="string">forIndexPath:</span>indexPath];</span><br><span class="line">    GoodTimeModel *model = self.dataArray[indexPath.row];</span><br><span class="line">    cell.model = model;</span><br><span class="line">    cell.tag = indexPath.row;</span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>TimerCollectionViewCell中进行计算显示剩余时间<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)setModel:(GoodTimeModel *)model&#123;</span><br><span class="line">    </span><br><span class="line">    _model = model;</span><br><span class="line">    <span class="keyword">self</span>.numerLabel.text = model.number;</span><br><span class="line">    <span class="keyword">self</span>.minSecondLabel.text = model.minSecond;</span><br><span class="line">    [<span class="keyword">self</span> setTimeWithLastTime:model.time beginTime:model.beginTime];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  开始进行倒计时</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  @param time 结束时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">-(<span class="keyword">void</span>)setTimeWithLastTime:(<span class="built_in">NSString</span>*)time beginTime:(<span class="built_in">NSString</span>*)beginTime&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDateFormatter</span> *formatter = [[<span class="built_in">NSDateFormatter</span> alloc] init];</span><br><span class="line">    [formatter setDateFormat:<span class="string">@"yyyy-MM-dd HH:mm:ss"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSDate</span> *endDate = [formatter dateFromString:time];</span><br><span class="line">    <span class="built_in">NSDate</span> *nowDate = [<span class="built_in">NSDate</span> date];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSDate</span> *beginDate = [formatter dateFromString:beginTime];</span><br><span class="line">    <span class="built_in">NSTimeInterval</span> beginTimeInterval = [beginDate timeIntervalSinceDate:nowDate];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//剩余时间</span></span><br><span class="line">    <span class="built_in">NSTimeInterval</span> timeInterval = [endDate timeIntervalSinceDate:nowDate];</span><br><span class="line">    <span class="keyword">self</span>.minSecondLabel.hidden = <span class="literal">YES</span>;</span><br><span class="line">    <span class="keyword">if</span> (timeInterval &lt;=<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//活动结束</span></span><br><span class="line">        <span class="keyword">self</span>.timerLabel.text = <span class="string">@"活动结束"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (beginTimeInterval &gt; <span class="number">0</span>)&#123;</span><br><span class="line">         <span class="comment">//活动未开始</span></span><br><span class="line">          <span class="keyword">self</span>.timerLabel.text = <span class="string">@"活动未开始"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">self</span>.minSecondLabel.hidden = <span class="literal">NO</span>;</span><br><span class="line">        <span class="keyword">int</span> day = (<span class="keyword">int</span>)timeInterval/(<span class="number">3600</span>*<span class="number">24</span>);</span><br><span class="line">        <span class="keyword">int</span> hours = (<span class="keyword">int</span>)(timeInterval - day*<span class="number">3600</span>*<span class="number">24</span>)/<span class="number">3600</span>;</span><br><span class="line">        <span class="keyword">int</span> minus = (timeInterval - day*<span class="number">24</span>*<span class="number">3600</span> - hours*<span class="number">3600</span>)/<span class="number">60</span>;</span><br><span class="line">        <span class="keyword">int</span> second = (timeInterval - day*<span class="number">3600</span>*<span class="number">24</span> - hours*<span class="number">3600</span>- minus*<span class="number">60</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//小时</span></span><br><span class="line">        <span class="built_in">NSString</span> *finalHours = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d"</span>,day*<span class="number">24</span> + hours];</span><br><span class="line">        <span class="keyword">if</span> ([finalHours intValue] &lt;<span class="number">10</span>) &#123;</span><br><span class="line">            finalHours = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"0%@"</span>,finalHours];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//分钟</span></span><br><span class="line">        <span class="built_in">NSString</span> *finalMinutes = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d"</span>,minus];</span><br><span class="line">        <span class="keyword">if</span> ([finalMinutes intValue] &lt;<span class="number">10</span>) &#123;</span><br><span class="line">            finalMinutes = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"0%@"</span>,finalMinutes];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//秒</span></span><br><span class="line">        <span class="built_in">NSString</span> *finalSeconds = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%d"</span>,second];</span><br><span class="line">        <span class="keyword">if</span> ([finalSeconds intValue] &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            finalSeconds = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"0%@"</span>,finalSeconds];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">self</span>.timerLabel.text = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@:%@:%@"</span>,finalHours,finalMinutes,finalSeconds];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span>(void)<span class="selector-tag">dealloc</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">NSLog</span>(@<span class="string">"class = %s"</span>,object_getClassName(self));</span><br><span class="line">    <span class="selector-attr">[_cutDown destroyTimer]</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;这次的项目里面有涉及到商品的倒计时功能，UIcollectionview中罗列商品进行倒计时，以前顶多就是密码找回，获取验证码，或者轮播图简
      
    
    </summary>
    
      <category term="iOS" scheme="https://wjsummer.top/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="https://wjsummer.top/tags/Objective-C/"/>
    
      <category term="GCD" scheme="https://wjsummer.top/tags/GCD/"/>
    
  </entry>
  
  <entry>
    <title>GCD并发多个请求(如Afn请求)</title>
    <link href="https://wjsummer.top/category/GCD%E5%B9%B6%E5%8F%91%E5%A4%9A%E4%B8%AA%E8%AF%B7%E6%B1%82-%E5%A6%82Afn%E8%AF%B7%E6%B1%82/"/>
    <id>https://wjsummer.top/category/GCD并发多个请求-如Afn请求/</id>
    <published>2019-04-04T07:34:15.000Z</published>
    <updated>2019-04-04T08:39:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本篇笔记主要针对的场景问题：</strong>需要并发执行多个AFNetworking请求，并且在多个请求成功返回结果之后，根据它们的结果来执行下一个任务。</p><h4 id="一-dispatch-group-介绍"><a href="#一-dispatch-group-介绍" class="headerlink" title="一 dispatch_group 介绍"></a>一 dispatch_group 介绍</h4><p><strong>1.1 基本概念</strong>：将追加到队列的一系列任务放进组中，可用于监听任务完成情况。</p><p><strong>1.2 常用方法</strong>：</p><ul><li>dispatch_group_create() 创建一个调度任务组。</li><li>disaptch_group_async (dispatch_group_t,dispatch_queue_t,block) 将一个追加到队列的任务提交到任务组中。</li><li>dispatch_group_enter/dispatch_group_leave ， 跟dispath_group_async类似，可理解为手动管理任务添加进组和任务离开组。</li><li>dispatch_group_notify 用来监听组中的任务全部执行完毕。</li><li>dispatch_group_wait (dispatch_group_t ,dispatch_time_t) 设置的等待时间，<strong>等待时间内所在的线程停止向下执行</strong>，时间结束后，如果组中的任务执行完毕，则返回0，如果没有只执行完毕则返回非0。<ul><li>通常时间设置为dispatch_time_forever,永久等待，此时当组中的任务全部执行完毕后，wait方法就会返回。</li></ul></li></ul><h4 id="二-实际使用场景（并发执行第多个任务）"><a href="#二-实际使用场景（并发执行第多个任务）" class="headerlink" title="二 实际使用场景（并发执行第多个任务）"></a>二 实际使用场景（并发执行第多个任务）</h4><h5 id="2-1-并发执行非异步任务"><a href="#2-1-并发执行非异步任务" class="headerlink" title="2.1 并发执行非异步任务"></a>2.1 并发执行非异步任务</h5><p><strong>需求描述</strong>：并发执行任务1和任务2，当它们执行结束后，执行任务3。</p><p><strong>分析</strong>：使用dispatch_group_async搭配dispatch_group_notify即可实现并行执行任务1和任务2 ，并且监听两个任务执行完毕之后，再执行任务3。</p><h6 id="2-1-1-代码解析"><a href="#2-1-1-代码解析" class="headerlink" title="2.1.1 代码解析"></a>2.1.1 代码解析</h6><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- (void)asyncWithGroup &#123;</span><br><span class="line">    <span class="comment">//创建group</span></span><br><span class="line">    dispatch_group_t group = dispatch_group_create();</span><br><span class="line">    <span class="comment">//全局并行队列</span></span><br><span class="line">    dispatch_queue_t globalQueue = dispatch_get_global_queue(<span class="type">DISPATCH_QUEUE_PRIORITY_DEFAULT</span>, <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    dispatch_group_async(group, globalQueue, ^&#123;</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"执行任务--1--"</span>);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"执行结束--1--"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    dispatch_group_async(group, globalQueue, ^&#123;</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"执行任务--2--"</span>);</span><br><span class="line">        sleep(<span class="number">3</span>);</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"执行结束--2--"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//监听组中任务全部执行完毕</span></span><br><span class="line">    dispatch_group_notify(group, globalQueue, ^&#123;</span><br><span class="line">        <span class="type">NSLog</span>(@<span class="string">"开始执行任务--3--"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印情况如下：<br><img src="https://upload-images.jianshu.io/upload_images/2203462-06856643e1e2d8af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>可见任务1和任务2是并发执行，并且在他们执行完毕之后，才执行任务3。</p><h5 id="2-2-并发执行异步任务"><a href="#2-2-并发执行异步任务" class="headerlink" title="2.2 并发执行异步任务"></a>2.2 并发执行异步任务</h5><p><strong>需求描述</strong>：并行执行任务1和任务2，任务1和任务2这里都是使用AFNnetworking发送请求，等待任务1和任务2请求完成（成功或失败）之后，再继续执行任务3。</p><p><strong>分析</strong>：</p><ul><li>对于AFNetworking的请求，难点在于是不知道何时返回结果。如果使用dispatch_group_async的话，那么在afn请求调用之后，该任务即认定结束了（<strong>示例看下面的注意部分</strong>）。</li><li>那么此时有两种实现方法可以解决这个问题。<ol><li>使用dispatch_group_enter/leave 来手动管理group中任务执行是否结束。<ul><li>dispatch_group_async可理解为自动管理任务的进组和离开组。</li></ul></li><li>使用group搭配dispatch_semaphore信号量来解决。</li></ol></li></ul><h6 id="2-2-1-代码解析（这里主要针对第一种实现方法做说明）"><a href="#2-2-1-代码解析（这里主要针对第一种实现方法做说明）" class="headerlink" title="2.2.1 代码解析（这里主要针对第一种实现方法做说明）"></a>2.2.1 代码解析（这里主要针对第一种实现方法做说明）</h6><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求连接</span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *url = <span class="string">@"http://httpbin.org/get"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 封装afn请求</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param url 使用定义的url</span></span><br><span class="line"><span class="comment"> @param result 用于简化，将success和failure统一描述</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)loadDataWithURL:(<span class="built_in">NSString</span> *)url result:(<span class="keyword">void</span>(^)(<span class="built_in">BOOL</span> isSuccess))result &#123;</span><br><span class="line">    </span><br><span class="line">    __block <span class="built_in">BOOL</span> isSuccess = <span class="literal">NO</span>;</span><br><span class="line">    [<span class="keyword">self</span>.manager GET:url parameters:<span class="literal">nil</span> progress:<span class="literal">nil</span> success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nullable responseObject) &#123;</span><br><span class="line">        isSuccess = <span class="literal">YES</span>;</span><br><span class="line">        result(isSuccess);</span><br><span class="line">    &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</span><br><span class="line">        isSuccess = <span class="literal">NO</span>;</span><br><span class="line">        result(isSuccess);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 使用group并发执行两个网络请求任务，三个任务执行完之后执行任务3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)loadDataConcurrentWithGroup &#123;</span><br><span class="line">    <span class="comment">//创建group</span></span><br><span class="line">    dispatch_group_t group = dispatch_group_create();</span><br><span class="line">    <span class="comment">//全局并发队列</span></span><br><span class="line">    <span class="built_in">dispatch_queue_t</span> globalQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    dispatch_group_enter(group);</span><br><span class="line">    <span class="built_in">dispatch_async</span>(globalQueue, ^&#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"任务--1--开始"</span>);</span><br><span class="line">        [<span class="keyword">self</span> loadDataWithURL:url result:^(<span class="built_in">BOOL</span> isSuccess) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"任务--1--完成"</span>);</span><br><span class="line">            dispatch_group_leave(group);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    dispatch_group_enter(group);</span><br><span class="line">    <span class="built_in">dispatch_async</span>(globalQueue, ^&#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"任务--2--开始"</span>);</span><br><span class="line">        [<span class="keyword">self</span> loadDataWithURL:url result:^(<span class="built_in">BOOL</span> isSuccess) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"任务--2--完成"</span>);</span><br><span class="line">            dispatch_group_leave(group);</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    dispatch_group_notify(group, globalQueue, ^&#123;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"开始执行任务--3--"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果如下图所示：<br><img src="https://upload-images.jianshu.io/upload_images/2203462-d6f3ef1e540682e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>可见任务1和任务2是并发执行，等到任务1和任务2请求成功返回请求结果后，才执行任务3。</p><p><strong>注意：</strong>上述代码如果将dispatch_group_leave(group)放在afn请求外面的话（如下所示），会是什么结果呢？<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    dispatch_async(<span class="name">globalQueue</span>, ^&#123;</span><br><span class="line">        NSLog(@<span class="string">"任务--1--开始"</span>)<span class="comment">;</span></span><br><span class="line">        [self loadDataWithURL<span class="symbol">:url</span> result:^(<span class="name">BOOL</span> isSuccess) &#123;</span><br><span class="line">            NSLog(@<span class="string">"任务--1--完成"</span>)<span class="comment">;</span></span><br><span class="line">//            dispatch_group_leave(<span class="name">group</span>)<span class="comment">;</span></span><br><span class="line">        &#125;]<span class="comment">;</span></span><br><span class="line">        dispatch_group_leave(<span class="name">group</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>此时在loadDataWithURL调用之后，发送afn请求，然后就会执行dispatch_group_leave（group），那么此时其实跟调用dispatch_group_async是一样的意思了。并不能监控到两个afn请求的成功返回。所以运行打印结果如下图所示：<br><img src="https://upload-images.jianshu.io/upload_images/2203462-8710d792e3947f96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h6 id="2-2-2-使用dispatch-group和disaptch-semaphore信号量实现方法会在dispatch-semaphore笔记中介绍。"><a href="#2-2-2-使用dispatch-group和disaptch-semaphore信号量实现方法会在dispatch-semaphore笔记中介绍。" class="headerlink" title="2.2.2 使用dispatch_group和disaptch_semaphore信号量实现方法会在dispatch_semaphore笔记中介绍。"></a>2.2.2 使用dispatch_group和disaptch_semaphore信号量实现方法会在dispatch_semaphore笔记中介绍。</h6><p><strong>结语：</strong> 路漫漫其修远兮，吾将上下而求索。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;本篇笔记主要针对的场景问题：&lt;/strong&gt;需要并发执行多个AFNetworking请求，并且在多个请求成功返回结果之后，根据它们的结果来执行下一个任务。&lt;/p&gt;
&lt;h4 id=&quot;一-dispatch-group-介绍&quot;&gt;&lt;a href=&quot;#一-dispa
      
    
    </summary>
    
      <category term="iOS" scheme="https://wjsummer.top/categories/iOS/"/>
    
    
      <category term="Objective-C" scheme="https://wjsummer.top/tags/Objective-C/"/>
    
      <category term="GCD" scheme="https://wjsummer.top/tags/GCD/"/>
    
  </entry>
  
</feed>
